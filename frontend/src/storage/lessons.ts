import AsyncStorage from '@react-native-async-storage/async-storage';

export interface LessonProgress {
  understood: boolean;
  madeDua: boolean;
  practiced: boolean;
  shared: boolean;
}

export interface LessonRecord {
  id: string;
  lessonId: string;
  progress: LessonProgress;
  score: number; // 0-100 based on questions answered
  completedAt?: string;
  rating?: number; // 1-5 stars
  viewCount: number;
}

export interface LessonComment {
  id: string;
  lessonId: string;
  userId: string;
  username: string;
  content: string;
  likes: number;
  dislikes: number;
  replies: LessonComment[];
  createdAt: string;
}

export interface Lesson {
  id: string;
  categoryId: string;
  title: string;
  content: string;
  contentType: 'text' | 'video' | 'mixed';
  videoUrl?: string;
  imageUrls?: string[];
  totalViews: number;
  totalRatings: number;
  averageRating: number;
  order: number;
}

export interface LessonCategory {
  id: string;
  name: string;
  icon: string;
  color: string;
  lessons: Lesson[];
  totalLessons: number;
}

// Sample lesson data structure
export const LESSON_CATEGORIES: LessonCategory[] = [
  {
    id: 'fiqh',
    name: 'ุงูููู',
    icon: '๐',
    color: '#4CAF50',
    totalLessons: 30,
    lessons: [
      {
        id: 'fiqh-1',
        categoryId: 'fiqh',
        title: 'ุฃุญูุงู ุงูุตูุงุฉ ุงูุฃุณุงุณูุฉ',
        content: `ุจุณู ุงููู ุงูุฑุญูู ุงูุฑุญูู

# ุฃุญูุงู ุงูุตูุงุฉ ุงูุฃุณุงุณูุฉ

ุงูุตูุงุฉ ูู ุงูุฑูู ุงูุซุงูู ูู ุฃุฑูุงู ุงูุฅุณูุงู ููู ุฃูู ุงูุนุจุงุฏุงุช ุจุนุฏ ุงูุดูุงุฏุชูู.

## ุดุฑูุท ุงูุตูุงุฉ:
1. **ุงูุทูุงุฑุฉ** - ุงููุถูุก ุฃู ุงูุบุณู ุญุณุจ ุงูุญุงุฌุฉ
2. **ุณุชุฑ ุงูุนูุฑุฉ** - ูุจุณ ุงูุซูุงุจ ุงูููุงุณุจุฉ
3. **ุงุณุชูุจุงู ุงููุจูุฉ** - ุงูุชูุฌู ูุญู ููุฉ ุงูููุฑูุฉ
4. **ุฏุฎูู ุงูููุช** - ุฃุฏุงุก ูู ุตูุงุฉ ูู ููุชูุง ุงููุญุฏุฏ

## ุฃุฑูุงู ุงูุตูุงุฉ:
- ุงูุชูุจูุฑ (ุงููู ุฃูุจุฑ)
- ูุฑุงุกุฉ ุงููุงุชุญุฉ
- ุงูุฑููุน ูุงูุณุฌูุฏ
- ุงูุชุดูุฏ ูุงูุณูุงู

ุงูุตูุงุฉ ุชุทูุฑ ุงูููุณ ูุชูุฑุจ ุงูุนุจุฏ ุฅูู ุฑุจูุ ูุงุญุฑุต ุนูู ุฃุฏุงุฆูุง ูู ุฃููุงุชูุง ุจุฎุดูุน ูุชุฏุจุฑ.`,
        contentType: 'text',
        totalViews: 150,
        totalRatings: 45,
        averageRating: 4.2,
        order: 1
      },
      {
        id: 'fiqh-2', 
        categoryId: 'fiqh',
        title: 'ุขุฏุงุจ ุงูุตูุงู',
        content: `ุจุณู ุงููู ุงูุฑุญูู ุงูุฑุญูู

# ุขุฏุงุจ ุงูุตูุงู ูู ุงูุฅุณูุงู

ุงูุตูุงู ูู ุงูุฑูู ุงูุซุงูุซ ูู ุฃุฑูุงู ุงูุฅุณูุงูุ ููู ุขุฏุงุจ ูุฃุญูุงู ูุฌุจ ุนูู ุงููุณูู ูุนุฑูุชูุง.

## ุขุฏุงุจ ุงูุตูู:
1. **ุงูุณุญูุฑ** - ุชูุงูู ุงูุทุนุงู ูุจู ุงููุฌุฑ
2. **ุชุนุฌูู ุงูุฅูุทุงุฑ** - ุงูุฅูุทุงุฑ ุนูุฏ ุงููุบุฑุจ ูุจุงุดุฑุฉ
3. **ุงูุฏุนุงุก ุนูุฏ ุงูุฅูุทุงุฑ** - "ุงูููู ูู ุตูุช ูุนูู ุฑุฒูู ุฃูุทุฑุช"
4. **ุงูุฅูุซุงุฑ ูู ุงููุฑุขู ูุงูุฐูุฑ** - ุงุณุชุบูุงู ุงูููุช ูู ุงูุนุจุงุฏุฉ

## ููุงุฆุฏ ุงูุตูุงู:
- ุชูููุฉ ุงูุฅุฑุงุฏุฉ ูุงูุตุจุฑ
- ุชุฐูุฑ ุงูููุฑุงุก ูุงููุญุชุงุฌูู  
- ุชุทููุฑ ุงูููุณ ูู ุงููุนุงุตู
- ุฒูุงุฏุฉ ุงูุชููู ูุงูุฎุดูุฉ ูู ุงููู

ูุงุญุฑุต ุฃุฎู ุงููุณูู ุนูู ุตูุงู ุฑูุถุงู ุจุขุฏุงุจู ูุฃุญูุงูู ูุชูุงู ุงูุฃุฌุฑ ุงูุนุธูู.`,
        contentType: 'text',
        totalViews: 89,
        totalRatings: 23,
        averageRating: 4.5,
        order: 2
      }
    ]
  },
  {
    id: 'aqeedah',
    name: 'ุงูุนููุฏุฉ',
    icon: '๐',
    color: '#2196F3', 
    totalLessons: 25,
    lessons: [
      {
        id: 'aqeedah-1',
        categoryId: 'aqeedah',
        title: 'ุฃุฑูุงู ุงูุฅููุงู ุงูุณุชุฉ',
        content: `ุจุณู ุงููู ุงูุฑุญูู ุงูุฑุญูู

# ุฃุฑูุงู ุงูุฅููุงู ุงูุณุชุฉ

ุงูุฅููุงู ูู ุณุชุฉ ุฃุฑูุงู ุฃุณุงุณูุฉ ูุฌุจ ุนูู ูู ูุณูู ุงูุฅููุงู ุจูุง.

## ุงูุฃุฑูุงู ุงูุณุชุฉ:
1. **ุงูุฅููุงู ุจุงููู** - ูุญุฏุงููุชู ูุฑุจูุจูุชู ูุฃููููุชู
2. **ุงูุฅููุงู ุจุงูููุงุฆูุฉ** - ุฌุจุฑูู ููููุงุฆูู ูุฅุณุฑุงููู ูุบูุฑูู
3. **ุงูุฅููุงู ุจุงููุชุจ** - ุงููุฑุขู ูุงูุชูุฑุงุฉ ูุงูุฅูุฌูู ูุงูุฒุจูุฑ
4. **ุงูุฅููุงู ุจุงูุฑุณู** - ูุญูุฏ ูุนูุณู ูููุณู ูุฅุจุฑุงููู ูุบูุฑูู
5. **ุงูุฅููุงู ุจุงูููู ุงูุขุฎุฑ** - ููู ุงูููุงูุฉ ูุงูุจุนุซ ูุงูุญุณุงุจ
6. **ุงูุฅููุงู ุจุงููุฏุฑ** - ุฎูุฑู ูุดุฑู ูู ุงููู ุชุนุงูู

ูุฐู ุงูุฃุฑูุงู ูู ุฃุณุงุณ ุงูุนููุฏุฉ ุงูุฅุณูุงููุฉ ุงูุตุญูุญุฉ.`,
        contentType: 'text',
        totalViews: 230,
        totalRatings: 67,
        averageRating: 4.7,
        order: 1
      }
    ]
  },
  {
    id: 'tafseer',
    name: 'ุงูุชูุณูุฑ',
    icon: '๐',
    color: '#FF9800',
    totalLessons: 45,
    lessons: [
      {
        id: 'tafseer-1',
        categoryId: 'tafseer',
        title: 'ุชูุณูุฑ ุณูุฑุฉ ุงููุงุชุญุฉ',
        content: `ุจุณู ุงููู ุงูุฑุญูู ุงูุฑุญูู

# ุชูุณูุฑ ุณูุฑุฉ ุงููุงุชุญุฉ - ุฃู ุงููุชุงุจ

ุณูุฑุฉ ุงููุงุชุญุฉ ูู ุฃุนุธู ุณูุฑุฉ ูู ุงููุฑุขู ุงููุฑูู ูุชุณูู "ุฃู ุงููุชุงุจ".

## ูุนุงูู ุงูุขูุงุช:

**ุจูุณููู ุงูููููู ุงูุฑููุญููููฐูู ุงูุฑููุญูููู**
- ูุจุฏุฃ ุจุงุณู ุงููู ุงูุฐู ูู ุงูุฃุณูุงุก ุงูุญุณูู

**ุงููุญูููุฏู ููููููู ุฑูุจูู ุงููุนูุงููููููู**  
- ุงูุซูุงุก ูุงูุดูุฑ ููู ุฑุจ ุฌููุน ุงููุฎูููุงุช

**ุงูุฑููุญููููฐูู ุงูุฑููุญูููู**
- ุงูุฑุญูู ูู ุงูุฏููุงุ ุงูุฑุญูู ูู ุงูุขุฎุฑุฉ

**ููุงูููู ูููููู ุงูุฏููููู**
- ูุงูู ููู ุงูููุงูุฉ ูุงูุญุณุงุจ

**ุฅููููุงูู ููุนูุจูุฏู ููุฅููููุงูู ููุณูุชูุนูููู**
- ุฅูุฑุงุฑ ุจุงูุนุจูุฏูุฉ ูุงูุงุณุชุนุงูุฉ ุจุงููู ูุญุฏู

**ุงููุฏูููุง ุงูุตููุฑูุงุทู ุงููููุณูุชูููููู**
- ุฏุนุงุก ุจุงููุฏุงูุฉ ุฅูู ุงูุทุฑูู ุงููุณุชููู

**ุตูุฑูุงุทู ุงูููุฐูููู ุฃูููุนูููุชู ุนููููููููู ุบูููุฑู ุงููููุบูุถููุจู ุนููููููููู ููููุง ุงูุถููุงูููููู**
- ุทุฑูู ุงูุฃูุจูุงุก ูุงูุตุงูุญููุ ูููุณ ุทุฑูู ุงููุบุถูุจ ุนูููู ุฃู ุงูุถุงููู

ูุฐู ุงูุณูุฑุฉ ุชุญูู ุฌููุน ูุนุงูู ุงููุฑุขู ุงููุฑูู.`,
        contentType: 'text',
        totalViews: 312,
        totalRatings: 89,
        averageRating: 4.8,
        order: 1
      }
    ]
  }
];

// Storage functions
const LESSON_RECORDS_KEY = 'lesson_records';
const LESSON_COMMENTS_KEY = 'lesson_comments';

export const loadLessonRecord = async (lessonId: string): Promise<LessonRecord | null> => {
  try {
    const stored = await AsyncStorage.getItem(LESSON_RECORDS_KEY);
    const records: LessonRecord[] = stored ? JSON.parse(stored) : [];
    return records.find(r => r.lessonId === lessonId) || null;
  } catch (error) {
    console.error('Error loading lesson record:', error);
    return null;
  }
};

export const saveLessonRecord = async (record: LessonRecord): Promise<void> => {
  try {
    const stored = await AsyncStorage.getItem(LESSON_RECORDS_KEY);
    const records: LessonRecord[] = stored ? JSON.parse(stored) : [];
    const existingIndex = records.findIndex(r => r.lessonId === record.lessonId);
    
    if (existingIndex >= 0) {
      records[existingIndex] = record;
    } else {
      records.push(record);
    }
    
    await AsyncStorage.setItem(LESSON_RECORDS_KEY, JSON.stringify(records));
  } catch (error) {
    console.error('Error saving lesson record:', error);
  }
};

export const getAllLessonRecords = async (): Promise<LessonRecord[]> => {
  try {
    const stored = await AsyncStorage.getItem(LESSON_RECORDS_KEY);
    return stored ? JSON.parse(stored) : [];
  } catch (error) {
    console.error('Error loading lesson records:', error);
    return [];
  }
};

export const calculateLessonScore = (progress: LessonProgress): number => {
  const questions = [progress.understood, progress.madeDua, progress.practiced, progress.shared];
  const answeredCount = questions.filter(Boolean).length;
  return (answeredCount * 12.5); // Each question worth 12.5 points
};

export const calculateKnowledgeScore = async (): Promise<{ 
  totalScore: number; 
  totalLessons: number; 
  completedLessons: number; 
  percentage: number 
}> => {
  const records = await getAllLessonRecords();
  const totalLessons = LESSON_CATEGORIES.reduce((sum, cat) => sum + cat.totalLessons, 0);
  const completedLessons = records.filter(r => r.score === 100).length;
  const totalScore = records.reduce((sum, r) => sum + r.score, 0);
  const percentage = totalLessons > 0 ? Math.round((totalScore / (totalLessons * 100)) * 100) : 0;
  
  return { totalScore, totalLessons, completedLessons, percentage };
};

// Comment functions
export const loadLessonComments = async (lessonId: string): Promise<LessonComment[]> => {
  try {
    const stored = await AsyncStorage.getItem(LESSON_COMMENTS_KEY);
    const allComments: LessonComment[] = stored ? JSON.parse(stored) : [];
    return allComments.filter(c => c.lessonId === lessonId);
  } catch (error) {
    console.error('Error loading lesson comments:', error);
    return [];
  }
};

export const saveLessonComment = async (comment: LessonComment): Promise<void> => {
  try {
    const stored = await AsyncStorage.getItem(LESSON_COMMENTS_KEY);
    const comments: LessonComment[] = stored ? JSON.parse(stored) : [];
    comments.push(comment);
    await AsyncStorage.setItem(LESSON_COMMENTS_KEY, JSON.stringify(comments));
  } catch (error) {
    console.error('Error saving lesson comment:', error);
  }
};